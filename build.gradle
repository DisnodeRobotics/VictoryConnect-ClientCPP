apply plugin : 'cpp' 
apply plugin: 'google-test' 
model { 
     repositories {
        libs(PrebuiltLibraries) { 
            googleTest { 
                headers.srcDir new File(projectDir, "/thirdparty/googletest-master/googletest/include") 
                binaries.withType(StaticLibraryBinary) {
                    staticLibraryFile = file(projectDir.getPath() + "/thirdparty/googletest-master/googletest/build/" + findGoogleTestStaticLib(targetPlatform)) 
                }
            }
        }
    }

    components {
        victoryconnect(NativeLibrarySpec) { 
        } 
        // Let's try using the library
        main(NativeExecutableSpec) { 
            sources {
                cpp.lib library: "victoryconnect" , linkage: "static"
            }
        }
    }

    binaries {
        withType(SharedLibraryBinarySpec) {
            if (toolChain in VisualCpp) {
                cppCompiler.define "DLL_EXPORT"
            }
        }

        withType(GoogleTestTestSuiteBinarySpec) {
            lib library: "googleTest", linkage: "static" 

            if (targetPlatform.operatingSystem.linux) {
                cppCompiler.args '-pthread'
                linker.args '-pthread'
            }
        }
    }
    
}

def findGoogleTestStaticLib(Platform p) {
    if (p.operatingSystem.windows) {
        return "Release/gtest.lib"
    } else {
        return "libgtest.a"
    }
}